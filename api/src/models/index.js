// Importation de Sequelize et des types de donn√©es
const { Sequelize, DataTypes } = require('sequelize');

// Importation de la configuration de la base de donn√©es
console.log('üîπ Import de la config database');
const sequelize = require('../../config/database');

// V√©rification de la connexion √† la base de donn√©es
sequelize.authenticate()
  .then(() => console.log('‚úÖ Connexion √† la base de donn√©es r√©ussie'))
  .catch(err => console.error('‚ùå Impossible de se connecter √† la base de donn√©es :', err));

// Importation et initialisation des mod√®les avec Sequelize
console.log('üîπ Initialisation des mod√®les');
const Category = require('./Category')(sequelize, DataTypes);
console.log('üì¶ Mod√®le Category charg√©');
const Specialite = require('./Specialite')(sequelize, DataTypes);
console.log('üì¶ Mod√®le Specialite charg√©');
const Artisan = require('./Artisan')(sequelize, DataTypes);
console.log('üì¶ Mod√®le Artisan charg√©');

// üí° Appel des associations entre les mod√®les
console.log('üîπ Appel des associations entre les mod√®les');
if (Category.associate) {
  Category.associate({ Artisan, Specialite });
  console.log('üîó Associations Category appliqu√©es');
}
if (Specialite.associate) {
  Specialite.associate({ Artisan, Category });
  console.log('üîó Associations Specialite appliqu√©es');
}
if (Artisan.associate) {
  Artisan.associate({ Specialite, Category });
  console.log('üîó Associations Artisan appliqu√©es');
}

// Test de synchronisation (optionnel pour debug, ne pas mettre en production)
sequelize.sync({ alter: false }) // ou { force: true } si tu veux r√©initialiser les tables
  .then(() => console.log('‚úÖ Synchronisation des mod√®les termin√©e'))
  .catch(err => console.error('‚ùå Erreur lors de la synchronisation des mod√®les :', err));

// Exportation des mod√®les et de l'instance Sequelize
console.log('üîπ Export des mod√®les et de Sequelize');
module.exports = {
  sequelize,
  Category,
  Specialite,
  Artisan,
};
